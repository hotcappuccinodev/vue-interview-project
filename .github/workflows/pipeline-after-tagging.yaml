name: Create new deployment for interview-example-project

#on:
#  push:
#    tags:
#      - '*'


on:
  push:
    branches:
      - master


jobs:
  build-backend-image:
    runs-on: ubuntu-22.04
    steps:
      - name: Build version information
        run: echo "Trying to build backend with new pushed version ${{ github.ref_name }}"
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
          architecture: x64
          cache: 'maven'
      - name: Prepare pom file for release...
        working-directory: deployment_tools
        run: |
          git update-index --chmod=+x backend_prepare_build.sh
          git update-index --chmod=+x helper_tools.sh
          bash ./backend_prepare_build.sh
      - name: Build and test the application
        working-directory: backend
        run: |
          echo "--------------"
          echo "Using maven version:"
          sh -c "mvn -v | grep 'Apache Maven'"
          echo "--------------"
          mvn package -DskipTests=true
          mvn test -DskipIntegrationTests=true
      - name: Upload '.jar' artifact to use it in other job
        uses: actions/upload-artifact@v3
        with:
          name: interview-example-project-backend
          path: backend/target/interview-example-project*.jar
  build-backend-docker-image:
    needs: [build-backend-image]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Build version information
        uses: actions/download-artifact@v3
        with:
          name: interview-example-project-backend
          path: backend/target
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker image and push to docker hub...
        working-directory: deployment_tools
        run: |
          git update-index --chmod=+x backend_build_backend_docker_image.sh
          git update-index --chmod=+x helper_tools.sh
          bash ./backend_build_backend_docker_image.sh

  build-react-frontend-image:
    runs-on: ubuntu-22.04
    steps:
      - name: Build version information
        run: echo "Trying to build react frontend with new pushed version ${{ github.ref_name }}"
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: frontend-react/package-lock.json
      - name: Run install and build
        working-directory: frontend-react
        run: |
          echo "--------------"
          echo "Run npm:"
          sh -c "node -v"
          echo "--------------"
          npm install
          npm run build
      - name: Upload 'dist' folder to use it in other job
        uses: actions/upload-artifact@v3
        with:
          name: interview-example-project-frontend
          path: frontend-react/build/
  build-react-frontend-docker-image:
    needs: [build-react-frontend-image]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Build version information
        uses: actions/download-artifact@v3
        with:
          name: interview-example-project-frontend
          path: frontend-react/build
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker image and push to docker hub...
        working-directory: deployment_tools
        run: |
          git update-index --chmod=+x frontend_build_image.sh
          git update-index --chmod=+x helper_tools.sh
          bash ./frontend_build_image.sh
